# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: aks-helloworld-one 
#   namespace: ingress 
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: aks-helloworld-one
#   template:
#     metadata:
#       labels:
#         app: aks-helloworld-one
#     spec:
#       containers:
#       - name: aks-helloworld-one
#         image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
#         ports:
#         - containerPort: 80
#         env:
#         - name: TITLE
#           value: "Welcome to Azure Kubernetes Service (AKS)"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: aks-helloworld-one
#   namespace: ingress  
# spec:
#   type: ClusterIP
#   ports:
#   - port: 80
#   selector:
#     app: aks-helloworld-one
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: aks-helloworld-two
#   namespace: ingress  
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: aks-helloworld-two
#   template:
#     metadata:
#       labels:
#         app: aks-helloworld-two
#     spec:
#       containers:
#       - name: aks-helloworld-two
#         image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
#         ports:
#         - containerPort: 80
#         env:
#         - name: TITLE
#           value: "AKS Ingress Demo"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: aks-helloworld-two
#   namespace: ingress  
# spec:
#   type: ClusterIP
#   ports:
#   - port: 80
#   selector:
#     app: aks-helloworld-two
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-world-ingress
#   namespace: ingress
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /hello-world-one(/|$)(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: aks-helloworld-one
#             port:
#               number: 80
#       - path: /hello-world-two(/|$)(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: aks-helloworld-two
#             port:
#               number: 80
#       - path: /(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: aks-helloworld-one
#             port:
#               number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-world-ingress-static
#   namespace: ingress
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/rewrite-target: /static/$2
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /static(/|$)(.*)
#         pathType: Prefix
#         backend:
#           service:
#             name: aks-helloworld-one
#             port: 
#               number: 80
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: ingress-test-client
#   namespace: ingress
# spec:
#   hostAliases:
#     - ip: "10.240.20.42"
#       hostnames:
#         - "ingresstest.com"
#   containers:
#     - name: ingress-test-client
#       image: mcr.microsoft.com/dotnet/core/aspnet
#       resources:
#         limits:
#           memory: "128Mi"
#           cpu: "500m"
#       ports:
#       - containerPort: 5432
#       command: ["/bin/bash", "-c"]
#       args:
#         - export BACKEND_URL="http://ingresstest.com/hello-world-one/";
#           while true; do
#             echo -e "\n Attemping $BACKEND_URL  \n";
#             curl -sS "$BACKEND_URL";
#             echo -e "\n ---------------------------- \n";
#             sleep 60m;
#           done;
# ---
              